{"version":3,"sources":["index.js"],"names":["Square","cssMatrix","borderRight","borderBottom","borderLeft","className","onClick","this","props","value","React","Component","Board","i","squares","pos","renderSquare","Game","handleClick","history","state","stepNumber","slice","calculateWinner","xIsNext","setState","concat","jumpTo","newHistroy","handleUndo","Array","fill","status","winner","length","map","index","desc","id","style","display","icon","faUndo","marginRight","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e93ad476.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUndo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass Square extends React.Component {\r\n  cssMatrix = [\r\n    { borderRight: \"solid\", borderBottom: \"solid\" }, // top-left\r\n    { borderBottom: \"solid\" }, // top-mid\r\n    { borderLeft: \"solid\", borderBottom: \"solid\" }, // top-right\r\n    { borderRight: \"solid\", borderBottom: \"solid\" }, // mid-left\r\n    { borderBottom: \"solid\" }, // mid-mid\r\n    { borderLeft: \"solid\", borderBottom: \"solid\" }, // mid-right\r\n    { borderRight: \"solid\" }, // bottom-left\r\n    {},\r\n    { borderLeft: \"solid\" }, // bottom-mid\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"square\"\r\n        onClick={this.props.onClick}\r\n        // style={this.cssMatrix[this.props.pos]}\r\n      >\r\n        {this.props.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n        pos={i}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick = (i) => {\r\n    const history = this.state.history;\r\n    const squares = history[this.state.stepNumber].squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: this.state.stepNumber + 1,\r\n    });\r\n  };\r\n\r\n  jumpTo = (i) => {\r\n    const history = this.state.history;\r\n    const newHistroy = history.slice(0, i + 1);\r\n    this.setState({\r\n      history: newHistroy,\r\n      stepNumber: i,\r\n      xIsNext: i % 2 === 0,\r\n    });\r\n  };\r\n\r\n  handleUndo = () => {\r\n    const history = this.state.history;\r\n    const stepNumber = this.state.stepNumber;\r\n    const newHistroy = history.slice(0, stepNumber);\r\n    this.setState({\r\n      history: newHistroy,\r\n      stepNumber: stepNumber - 1,\r\n      xIsNext: (stepNumber - 1) % 2 === 0,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const squares = history[history.length - 1].squares;\r\n    const winner = calculateWinner(squares);\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    const moves = history.map((squares, index) => {\r\n      const desc = index ? `Go to move #${index}` : `Go to start`;\r\n\r\n      return (\r\n        <li key={index}>\r\n          <button onClick={() => this.jumpTo(index)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <h1>Tic Tac Toe Game</h1>\r\n        <hr className=\"line\"></hr>\r\n        <div className=\"game-board\">\r\n          <div className=\"status\">{status}</div>\r\n          <Board\r\n            squares={this.state.history[history.length - 1].squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <button\r\n            id=\"undo\"\r\n            style={{\r\n              display: this.state.stepNumber === 0 ? \"none\" : \"inline\",\r\n            }}\r\n            onClick={this.handleUndo}\r\n          >\r\n            <FontAwesomeIcon\r\n              icon={faUndo}\r\n              style={{ marginRight: \"5px\" }}\r\n            ></FontAwesomeIcon>\r\n            Undo\r\n          </button>\r\n          {/* <button>Undo</button> */}\r\n          {/* <div>status</div>\r\n          <ol>{moves}</ol> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}